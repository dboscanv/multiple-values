/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface IwMultipleValues {
      /**
       * If true, the inputs can edit
       */
      'canEdit': boolean;
      /**
       * The name of the label of inputs
       */
      'label': string;
      /**
       * The value of the component (iw-multiple-values) 
       */
      'value': Array<any>;
    }
  }

  interface HTMLIwMultipleValuesElement extends StencilComponents.IwMultipleValues, HTMLStencilElement {}

  var HTMLIwMultipleValuesElement: {
    prototype: HTMLIwMultipleValuesElement;
    new (): HTMLIwMultipleValuesElement;
  };
  interface HTMLElementTagNameMap {
    'iw-multiple-values': HTMLIwMultipleValuesElement;
  }
  interface ElementTagNameMap {
    'iw-multiple-values': HTMLIwMultipleValuesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'iw-multiple-values': JSXElements.IwMultipleValuesAttributes;
    }
  }
  namespace JSXElements {
    export interface IwMultipleValuesAttributes extends HTMLAttributes {
      /**
       * If true, the inputs can edit
       */
      'canEdit'?: boolean;
      /**
       * The name of the label of inputs
       */
      'label'?: string;
      /**
       * Emitted when the value change
       */
      'onValuechange'?: (event: CustomEvent) => void;
      /**
       * The value of the component (iw-multiple-values) 
       */
      'value'?: Array<any>;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;